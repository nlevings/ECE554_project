
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module IDecode(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
	wire [9:0] pc_next;
	wire [21:0] A0,A1,M,LS;
	wire clk;
	wire [15:0] a0_wr,a1_wr,m_wr,ls_wr;
	wire [4:0] a0_tag,a1_tag,m_tag,ls_tag;
	wire a0_cnd,a1_cnd,m_cnd,ls_cnd;
	wire [15:0] a0_R0,a0_R1,a1_R0,a1_R1,m_R0,m_R1,ls_R0,ls_R1;
	wire [4:0] a0_R0_tag,a0_R1_tag,a1_R0_tag,a1_R1_tag,m_R0_tag,m_R1_tag,ls_R0_tag,ls_R1_tag;
	wire predRW;
	wire chsa0,chsa1,chsls,chsm,a0cnd,a1cnd,lscnd,mcnd;
	wire [12:0] CntrlSig; //{4'A0op,4'dA1op,1'LSop,4'_en}
	
	//inputs from execute and memory for forewarding
	wire [4:0] teA0_Rd,teA1_Rd,teM_Rd,tmemA0_Rd,tmemA1_Rd,tmemLS_Rd,tmemM_Rd;
	wire[15:0] eA0_Rd,eA1_Rd,eM_Rd,memA0_Rd,memA1_Rd,memLS_Rd,memM_Rd;



//=======================================================
//  Structural coding
//=======================================================
ID ID0(.pc_next(pc_next),.A0(A0),.A1(A1),.M(M),.LS(LS),.clk(CLOCK_50),
						.a0_wr(a0_wr),.a1_wr(a1_wr),.m_wr(m_wr),.ls_wr(ls_wr),.a0_tag(a0_tag),.a1_tag(a1_tag),.m_tag(m_tag),.ls_tag(ls_tag),
						.teA0_Rd(teA0_Rd),.teA1_Rd(teA1_Rd),.teM_Rd(teM_Rd),.tmemA0_Rd(tmemA0_Rd),.tmemA1_Rd(tmemA1_Rd),.tmemLS_Rd(tmemLS_Rd),.tmemM_Rd(tmemM_Rd),
						.eA0_Rd(eA0_Rd),.eA1_Rd(eA1_Rd),.eM_Rd(eM_Rd),.memA0_Rd(memA0_Rd),.memA1_Rd(memA1_Rd),.memLS_Rd(memLS_Rd),.memM_Rd(memM_Rd),
						.a0_cnd(a0_cnd),.a1_cnd(a1_cnd),.m_cnd(m_cnd),.ls_cnd(ls_cnd),.predRW(predRW),
						.a0_R0(a0_R0),.a0_R1(a0_R1),.a1_R0(a1_R0),.a1_R1(a1_R1),.m_R0(m_R0),.m_R1(m_R1),.ls_R0(ls_R0),.ls_R1(ls_R1),
						.a0_R0_tag(a0_R0_tag),.a0_R1_tag(a0_R1_tag),.a1_R0_tag(a1_R0_tag),.a1_R1_tag(a1_R1_tag),.m_R0_tag(m_R0_tag),.m_R1_tag(m_R1_tag),.ls_R0_tag(ls_R0_tag),.ls_R1_tag(ls_R1_tag),
						.chsa0(chsa0),.chsa1(chsa1),.chsls(chsls),.chsm(chsm),.a0cnd(a0cnd),.a1cnd(a1cnd),.lscnd(lscnd),.mcnd(mcnd),
						.CntrlSig(CntrlSig),
						.a0_en(a0_en),.a1_en(a1_en),.m_en(m_en),.ls_en(ls_en),
						a0_Rd_tag(a0_Rd_tag), .a1_Rd_tag(a1_Rd_tag), .m_Rd_tag(m_Rd_tag), .ls_Rd_tag(ls_Rd_tag)
						);


endmodule
